[tool.black]
line-length = 120
skip-string-normalization = true
exclude = '''
/(
  seqr-loading-pipelines
  | venv
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ['gnomad_methods', 'seqr-loading-pipelines']
testpaths = ['test']


[tool.ruff]
line-length = 120

[tool.ruff.lint]
# ignore pydocstyle, flake8-boolean-trap (FBT)
select = ["A", "B", "C",  "E", "F", "G", "I", "N", "Q", "S", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "ERA", "EXE", "ICN", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "UP", "YTT"]

fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "ERA", "EXE", "FBT", "ICN", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "UP", "YTT"]

ignore = [
    "ANN101",  # Missing type annotation for self in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
    "ANN201",  # Missing return type annotation for public function
    "ANN204",  # Missing type annotation for special method `__init__`
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
    "E501",    # Line length too long
    "E731",    # Do not assign a lambda expression, use a def
    "E741",    # Ambiguous variable name
    "G004",    # Logging statement uses f-string
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "PLW0603", # Using the global statement to update `<VAR>` is discouraged
    "PT018",   # Assertion should be broken down into multiple parts
    "Q000",    # Single quotes found but double quotes preferred
    "S101",    # Use of assert detected
    "SLF001",  # Private member accessed: `_preemptible`

    "ARG001",  # Unused function argument
    "ARG002",  # Unused method argument

    "PLR2004", # Magic value used
]

[tool.ruff.lint.isort]

section-order = ["future", "standard-library", "third-party", "hail", "cpg", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
hail = [
    "hail",
    "hailtop",
]
# Adjust these for each repository, e.g., removing those that should be
# local rather than CPG. Also fill in extend_skip below if there are any
# subdirectories that should be ignored.
cpg = [
    "analysis_runner",
    "cpg_infra",
    "cpg_utils",
    "cpg_workflows",
    "gnomad",
    "hail_scripts",
    "metamist",
]
