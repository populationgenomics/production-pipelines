[workflow]
name = 'rd_combiner'
status_reporter = 'metamist'

## If set, stop at generation of the joint-callset using the Combiner
#last_stages = ['CreateDenseMtFromVdsWithHail']

## if this is False, we will not check for existing VDS - always create fresh VDS from gVCFs
check_for_existing_vds = false

## If this is populated with an integer, we will use the VDS with this ID in Metamist as the starting point
#use_specific_vds = 1234

## Subsetting and AnnotateDataset will only run for these datasets
#write_mt_for_datasets = ['test_dataset', ]

# these are used when calculating how many fragments to send to each job
vqsr_training_fragments_per_job = 100
vqsr_apply_fragments_per_job = 60
indel_recal_disc_size = 20
snps_gather_disc_size = 10
snps_recal_disc_size = 20

# choices of jar specs to use for the various steps
# without this setting we would default to matching the native Hail version in the container
# currently set to 'a8be268326b2ac168035b629a78465c9d94fc7b9' - 133 + 400'retry + StreamConstraints patch
[rd_combiner.jar_spec_revision]
annotate_cohort = 'a8be268326b2ac168035b629a78465c9d94fc7b9'
annotate_dataset = 'a8be268326b2ac168035b629a78465c9d94fc7b9'
combiner = 'a8be268326b2ac168035b629a78465c9d94fc7b9'
densify = 'a8be268326b2ac168035b629a78465c9d94fc7b9'
subset = 'a8be268326b2ac168035b629a78465c9d94fc7b9'

[combiner]
# used to decide if we should resume from a previous combiner plan
force_new_combiner = false
memory = "8Gi"
storage = "10Gi"

[vqsr]
# VQSR, when applying model, targets indel_filter_level and snp_filter_level
# sensitivities. The tool matches them internally to a VQSLOD score cutoff
# based on the model's estimated sensitivity to a set of true variants.
snp_filter_level = 99.7
indel_filter_level = 99.0

[gcloud_condense]
chunk_size = 32
storage = "10Gi"

[references]
# this might be a holdover until the references file is corrected. Working in Main.
vep_110_mount = "gs://cpg-common-main/references/vep/110/mount"
