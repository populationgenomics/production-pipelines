[workflow]
name = 'seqr_loader'
dataset_gcp_project = 'seqr-308602'
dataset = 'seqr'
status_reporter = 'metamist'

# Use GnarlyGenotyper instead of GenotypeGVCFs
use_gnarly = false

# Use allele-specific annotations for VQSR
use_as_vqsr = true

# Realign CRAM when available, instead of using FASTQ.
# The parameter value should correspond to CRAM version
# (e.g. v0 in gs://cpg-fewgenomes-main/cram/v0/CPG01234.cram
#realign_from_cram_version = 'v0'

# Calling intervals (defauls to whole genome intervals)
#intervals_path =

# Create Seqr ElasticSearch indices for these datasets. If not specified, will
# create indices for all input datasets.
#create_es_index_for_datasets = []

[vqsr]
# VQSR, when applying model, targets indel_filter_level and snp_filter_level
# sensitivities. The tool matches them internally to a VQSLOD score cutoff 
# based on the model's estimated sensitivity to a set of true variants.
snp_filter_level = 99.7
indel_filter_level = 99.0

[qc_thresholds.genome.min]
"MEDIAN_COVERAGE" = 10
"PCT_PF_READS_ALIGNED" = 80
[qc_thresholds.genome.max]
"FREEMIX" = 0.04
"PERCENT_DUPLICATION" = 25

[hail]
pool_label = 'seqr'
billing_project = 'seqr'

[slack]
channel = 'seqr-loader-test'
token_secret_id = 'slack-seqr-loader-token'
token_project_id = 'seqr-308602'

[elasticsearch]
# Configure access to ElasticSearch server
port = 9243
host = 'elasticsearch.es.australia-southeast1.gcp.elastic-cloud.com'
username = 'seqr'
# Load ElasticSearch password from a secret, unless SEQR_ES_PASSWORD is set
password_secret_id = 'seqr-es-password'
password_project_id = 'seqr-308602'
