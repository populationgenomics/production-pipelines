name: Docker
on:
#  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to use (defaults to "test")'
        default: "test"

env:
  VERSION: 1.18.2

jobs:
  docker:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      IMAGE_NAME: cpg_workflows
      DOCKER_DEV: australia-southeast1-docker.pkg.dev/cpg-common/images-dev
      DOCKER_MAIN: australia-southeast1-docker.pkg.dev/cpg-common/images
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: gcloud auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GH_IMAGES_DEPLOYER_JSON }}

      - name: set up gcloud sdk
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: cpg-common

      - name: gcloud docker auth
        run: |
          gcloud auth configure-docker australia-southeast1-docker.pkg.dev

      - name: build
        run: |
          docker build . -f Dockerfile --tag $IMAGE_NAME:${{ github.sha }}

      - name: push PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker tag $IMAGE_NAME:${{ github.sha }} $DOCKER_DEV/$IMAGE_NAME:pr-${{ github.event.number }}
          docker push $DOCKER_DEV/$IMAGE_NAME:pr-${{ github.event.number }}

      - name: manually triggered build
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker tag $IMAGE_NAME:${{ github.sha }} $DOCKER_DEV/$IMAGE_NAME:${{github.event.inputs.tag}}
          docker push $DOCKER_DEV/$IMAGE_NAME:${{github.event.inputs.tag}}

      - name: push latest
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        run: |
          docker tag $IMAGE_NAME:${{ github.sha }} $DOCKER_MAIN/$IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME:${{ github.sha }} $DOCKER_MAIN/$IMAGE_NAME:latest
          docker push $DOCKER_MAIN/$IMAGE_NAME:$VERSION
          docker push $DOCKER_MAIN/$IMAGE_NAME:latest
